proxy_cache_path /var/cache/nginx keys_zone=cache:10m inactive=1w;
resolver 127.0.0.11 valid=30s; # Docker DNS resolver

# http config
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri; # redirect all to https --> https://*.example.com
    }
}

# https config
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name _; # incoming https://my-web.local
    proxy_cache cache;

    # set SSL
    ssl_certificate /etc/nginx/ssl/live/my-web.local/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/live/my-web.local/nginx-selfsigned.key;

    # set upstream
    set $upstream http://web:3000;

    location / {
        proxy_pass $upstream; # use varaible for prevent host not found
        include /etc/nginx/conf.d/proxy.conf;
        include /etc/nginx/conf.d/cache.conf;
        error_log /var/log/nginx/web.error.log debug;
    }

    # set error page
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /etc/nginx/conf.d/;
        internal;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name docs.my-web.local; # incoming https://docs.my-web.local
    proxy_cache cache;

    # set SSL
    ssl_certificate /etc/nginx/ssl/live/my-web.local/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/live/my-web.local/nginx-selfsigned.key;

    # set upstream
    set $upstream http://docs:3001;

    location / {
        proxy_pass $upstream; # use varaible for prevent host not found
        include /etc/nginx/conf.d/proxy.conf;
        include /etc/nginx/conf.d/cache.conf;
        error_log /var/log/nginx/docs.error.log debug;
    }

    # set error page
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /etc/nginx/conf.d/;
        internal;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name api.my-web.local; # incoming https://api.my-web.local
    proxy_cache cache;

    # set SSL
    ssl_certificate /etc/nginx/ssl/live/api.my-web.local/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/live/api.my-web.local/nginx-selfsigned.key;

    # set upstream
    set $upstream http://api:4000;

    location / {
        proxy_pass $upstream; # use varaible for prevent host not found
        include /etc/nginx/conf.d/proxy.conf;
        include /etc/nginx/conf.d/cache.conf;
        error_log /var/log/nginx/docs.error.log debug;
    }

    # set error page
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /etc/nginx/conf.d/;
        internal;
    }
}
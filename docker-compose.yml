version: '3'
services:
  # https://mindsers.blog/post/https-using-nginx-certbot-docker/
  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      # :ro --> read-only container can read but cant update this directory 
      - ./docker/config/proxy/:/etc/nginx/conf.d/:ro
      - ./docker/config/certbot/www:/var/www/certbot/:ro
      - ./docker/config/certbot/conf/:/etc/nginx/ssl/:ro
      - ./docker/config/proxy/50x.html:/usr/share/nginx/html/50x.html:ro

  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     # :rw --> read-write container can read and update this directory
  #     - ./docker/config/certbot/www/:/var/www/certbot/:rw
  #     - ./docker/config/certbot/conf/:/etc/letsencrypt/:rw
  #   depends_on:
  #     - proxy

  web:
    image: ltk-auto/web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: web
    ports:
      - 3000:3000
    restart: always

  docs:
    image: ltk-auto/docs
    build:
      context: .
      dockerfile: ./apps/docs/Dockerfile
    container_name: docs
    ports:
      - 3001:3001
    restart: always

  api:
    image: ltk-auto/api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: api
    ports:
      - 4000:4000
    restart: always
    env_file:
      - apps/api/.env
    depends_on:
      - postgres

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    env_file:
      - ./apps/api/.env
    ports:
      - '5432:5432'
    volumes:
      - ./.temp/postgresql/data:/var/lib/postgresql/data
